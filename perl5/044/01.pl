#!/usr/local/bin/perl

use strict; use warnings;


# Problem 44
# 23 May 2003
# 
# Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first ten pentagonal numbers are:
# 
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
# 
# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 22 = 48, is not pentagonal.
# 
# Find the smallest pair of pentagonal numbers for which their sum and difference is pentagonal; what is their difference?


my $pents;
for(1..10000){
    my $pent = pentagonal($_);
    $pents->{ $pent } = $_;

    check_pents() unless $_ % 1000;

    #print pentagonal($_)."\n";
}

sub check_pents {
    print STDERR "checking...";
    foreach my $p1 ( sort { $a <=> $b } keys %$pents ){
        foreach my $p2 ( sort { $a <=> $b } keys %$pents ){
            #print "checking $p1 + $p2\n";
            #print "found $p1 & $p2!\n"
            #     ."sum:        @{[ $p1 + $p2 ]}\n"
            #    if $pents->{ $p1 + $p2 }
            #;
            #print "found $p1 & $p2!\n"
            #     ."difference: @{[ abs( $p1 - $p2 ) ]}\n"
            #    if $pents->{ abs( $p1 - $p2 ) }
            #;
            print "\nfound $p1 & $p2!                    (n1 = $pents->{$p1} & n2 = $pents->{$p2})\n"
                 ."sum:        @{[ $p1 + $p2 ]}        (n = $pents->{$p1 + $p2})\n"
                 ."difference: @{[ abs( $p1 - $p2 ) ]} (n = $pents->{abs($p1-$p2)})\n"
                if (    $pents->{ $p1 + $p2 }
                    and $pents->{ abs( $p1 - $p2 ) }
                )
            ;
        }
    }
    print STDERR "done.\n";
}


sub pentagonal {
    my $n = shift;

    return ( $_ * ( ( 3 * $_ ) - 1 ) ) / 2;
}

